<?xml version="1.0"?>
<!--
    Path moving with obstacle avoidance. Quintic polinoms + LiDAR
    Jetson side:
        - Path publishing
        - Logging in frund format
        - SLAM, obstacle detection, motion planning, control
-->
<launch>
    <arg name="max_pwm" default="30"/>
    <arg name="p_gain" default="1"/>
    <arg name="radius" default="0.3"/>
    <arg name="run_now" default="true"/>
    <arg name="path_file" default=""/>
    <!-- logging -->
    <arg name="is_publish_path" default="false"/>
    <arg name="is_log_path" default="false"/>
    <arg name="logs_directory" default="$(find jetson_car)/logs"/>

    <!-- ZED-camera SLAM -->
    <include file="$(find zed_wrapper)/launch/zed.launch"/>

    <!-- Velodyne -->
    <include file="$(find velodyne_pointcloud)/launch/VLP16_points.launch"/>
    <include file="$(find lego_loam)/launch/run.launch">
        <param name="use_sim_time" value="false"/>
    </include>
    
    <!-- The main node - move along the path -->
    <node name="path_mover" pkg="jetson_car" type="path_mover_node.py" if="$(arg run_now)" output="screen">
        <param name="p_gain" value="$(arg p_gain)"/>
        <param name="radius" value="$(arg radius)"/>
        <remap from="local_path" to="reference_path"/>
    </node>

    <!-- publish path from file -->
    <include file="$(find jetson_car)/launch/include/_path_publisher.launch" if="$(eval path_file!='')">
        <arg name="path_file" value="$(arg path_file)"/>
    </include>

    <!-- logging -->
    <node name="odometry_logger" pkg="jetson_car" type="simple_odologger.py" output="screen"/>

    <!-- motors control and message converter -->
    <node name="motors_driver" pkg="jetson_car" type="motors_driver_node" output="screen"/>
    <node name="joy_to_motors" pkg="jetson_car" type="joy_to_motors_node.py" output="screen">
        <param name="max_pwm" value="$(arg max_pwm)"/>
    </node>
</launch>
